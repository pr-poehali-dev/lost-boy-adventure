import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Difficulty, GameMode, DIFFICULTY_SETTINGS } from '@/types/game';

interface GameMenuProps {
  difficulty: Difficulty;
  gameMode: GameMode;
  isMobile: boolean;
  currentView: 'menu' | 'stats' | 'leaderboard' | 'history';
  onDifficultyChange: (d: Difficulty) => void;
  onGameModeChange: (m: GameMode) => void;
  onStartGame: () => void;
  onViewChange: (view: 'menu' | 'stats' | 'leaderboard' | 'history') => void;
}

export function GameMenu({ 
  difficulty, 
  gameMode, 
  isMobile, 
  currentView, 
  onDifficultyChange, 
  onGameModeChange, 
  onStartGame,
  onViewChange 
}: GameMenuProps) {
  return (
    <Card className="p-8 bg-[#2C1810] border-4 border-[#8B0000] space-y-6">
      <div className="text-center space-y-2">
        <h1 className="text-5xl font-bold text-[#8B0000] tracking-wider">–ü–û–ë–ï–ì –î–ò–ú–´</h1>
        <p className="text-white text-lg">–°–±–µ–≥–∏ –æ—Ç –ª–µ—Å–Ω–∏–∫–∞ –≤ —Ç–µ–º–Ω–æ–º –ª–µ—Å—É</p>
      </div>

      <div className="space-y-4">
        <div>
          <p className="text-white font-bold mb-3 text-center">–í–´–ë–ï–†–ò –°–õ–û–ñ–ù–û–°–¢–¨</p>
          <div className="grid grid-cols-2 gap-2">
            <Button
              onClick={() => onDifficultyChange('easy')}
              variant={difficulty === 'easy' ? 'default' : 'outline'}
              className={`font-bold ${
                difficulty === 'easy'
                  ? 'bg-[#8B0000] hover:bg-[#6B0000] text-white'
                  : 'bg-[#1A1A1A] text-gray-300 border-[#8B0000]'
              }`}
            >
              üü¢ –õ–µ–≥–∫–æ
            </Button>
            <Button
              onClick={() => onDifficultyChange('normal')}
              variant={difficulty === 'normal' ? 'default' : 'outline'}
              className={`font-bold ${
                difficulty === 'normal'
                  ? 'bg-[#8B0000] hover:bg-[#6B0000] text-white'
                  : 'bg-[#1A1A1A] text-gray-300 border-[#8B0000]'
              }`}
            >
              üü° –ù–æ—Ä–º–∞–ª
            </Button>
            <Button
              onClick={() => onDifficultyChange('hard')}
              variant={difficulty === 'hard' ? 'default' : 'outline'}
              className={`font-bold ${
                difficulty === 'hard'
                  ? 'bg-[#8B0000] hover:bg-[#6B0000] text-white'
                  : 'bg-[#1A1A1A] text-gray-300 border-[#8B0000]'
              }`}
            >
              üü† –°–ª–æ–∂–Ω–æ
            </Button>
            <Button
              onClick={() => onDifficultyChange('nightmare')}
              variant={difficulty === 'nightmare' ? 'default' : 'outline'}
              className={`font-bold ${
                difficulty === 'nightmare'
                  ? 'bg-[#8B0000] hover:bg-[#6B0000] text-white'
                  : 'bg-[#1A1A1A] text-gray-300 border-[#8B0000]'
              }`}
            >
              üî¥ –ö–æ—à–º–∞—Ä
            </Button>
          </div>
        </div>

        <div>
          <p className="text-white font-bold mb-3 text-center">–†–ï–ñ–ò–ú –ò–ì–†–´</p>
          <div className="grid grid-cols-2 gap-2">
            <Button
              onClick={() => onGameModeChange('day')}
              variant={gameMode === 'day' ? 'default' : 'outline'}
              className={`text-sm font-bold ${
                gameMode === 'day'
                  ? 'bg-[#8B0000] hover:bg-[#6B0000] text-white'
                  : 'bg-[#1A1A1A] text-gray-300 border-[#8B0000]'
              }`}
            >
              ‚òÄÔ∏è –î–µ–Ω—å
            </Button>
            <Button
              onClick={() => onGameModeChange('night')}
              variant={gameMode === 'night' ? 'default' : 'outline'}
              className={`text-sm font-bold ${
                gameMode === 'night'
                  ? 'bg-[#8B0000] hover:bg-[#6B0000] text-white'
                  : 'bg-[#1A1A1A] text-gray-300 border-[#8B0000]'
              }`}
            >
              üåô –ù–æ—á—å
            </Button>
          </div>
        </div>
      </div>

      <div className="bg-[#1A1A1A] p-4 border-2 border-[#8B0000] text-white text-sm space-y-2">
        <div className="flex justify-between">
          <span>–°–∫–æ—Ä–æ—Å—Ç—å –ª–µ—Å–Ω–∏–∫–∞:</span>
          <span className="font-bold">{DIFFICULTY_SETTINGS[difficulty].keeperSpeed}x</span>
        </div>
        <div className="flex justify-between">
          <span>–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ:</span>
          <span className="font-bold">{DIFFICULTY_SETTINGS[difficulty].detectionRate}x</span>
        </div>
        <div className="flex justify-between">
          <span>–í—Ä–µ–º—è –≤—ã–∂–∏–≤–∞–Ω–∏—è:</span>
          <span className="font-bold">{DIFFICULTY_SETTINGS[difficulty].surviveTime}—Å</span>
        </div>
        {gameMode === 'night' && (
          <div className="flex justify-between text-yellow-400">
            <span>–í–∏–¥–∏–º–æ—Å—Ç—å:</span>
            <span className="font-bold">–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∞</span>
          </div>
        )}
      </div>

      <div className="bg-[#1A1A1A] p-4 border-2 border-[#8B0000]">
        <p className="text-white text-center mb-2 font-bold">–£–ü–†–ê–í–õ–ï–ù–ò–ï</p>
        <p className="text-gray-300 text-center">
          {isMobile ? 'üì± –°–µ–Ω—Å–æ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω ‚Äî –≤–µ–¥–∏ –ø–∞–ª—å—Ü–µ–º' : 'W A S D –∏–ª–∏ –¶ –§ –´ –í ‚Äî –¥–≤–∏–∂–µ–Ω–∏–µ'}
        </p>
      </div>

      <Button 
        onClick={onStartGame}
        className="w-full h-16 text-2xl font-bold bg-[#8B0000] hover:bg-[#6B0000] border-4 border-black"
      >
        –ù–ê–ß–ê–¢–¨ –ò–ì–†–£
      </Button>
      
      <div className="grid grid-cols-3 gap-2">
        <Button 
          onClick={() => onViewChange('stats')}
          variant="outline"
          className={`font-bold ${currentView === 'stats' ? 'bg-[#8B0000] text-white' : 'bg-[#1A1A1A] text-gray-300 border-[#8B0000]'}`}
        >
          üìä –°—Ç–∞—Ç—ã
        </Button>
        <Button 
          onClick={() => onViewChange('leaderboard')}
          variant="outline"
          className={`font-bold ${currentView === 'leaderboard' ? 'bg-[#8B0000] text-white' : 'bg-[#1A1A1A] text-gray-300 border-[#8B0000]'}`}
        >
          üèÜ –¢–û–ü
        </Button>
        <Button 
          onClick={() => onViewChange('history')}
          variant="outline"
          className={`font-bold ${currentView === 'history' ? 'bg-[#8B0000] text-white' : 'bg-[#1A1A1A] text-gray-300 border-[#8B0000]'}`}
        >
          üìú –ò–≥—Ä—ã
        </Button>
      </div>
    </Card>
  );
}